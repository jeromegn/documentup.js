/* ========================================================================== *
 * Tooltip module
 * -------------------------------------------------------------------------- */

@mixin tooltip($direction: 'bottom', $offset: 0px, $width: auto, $background: $black-3) {
  position: relative;
  cursor: pointer;

  // Tooltip components default state
  &:after,
  &:before {
    position: absolute;
    opacity: 0;
    visibility: hidden;
    z-index: 3;
    transition:
      opacity $duration,
      visibility $duration;
  }

  // Tooltip components active state
  &:hover,
  &:focus,
  &:active {
    &:after,
    &:before {
      visibility: visible;
      opacity: 1;
    }
  }

  // Bubble
  &:after {
    content: attr(data-tooltip);
    color: $white-1;
    font-size: 14px;
    font-weight: 300;
    line-height: 20px;
    padding: 10px 12px;
    max-width: 100vw;
    border-radius: $radius;
    background: $background;

    // Width settings
    @if $width == 'auto' {
      width: auto;
      white-space: nowrap;
    } @else {
      width: $width;
    }

    // Direction settings
    @if $direction == 'bottom' {
      left: 50%;
      top: calc(100% + 6px + #{$offset});
      transform: translateX(-50%);
    } @else if $direction == 'top' {
      left: 50%;
      bottom: calc(100% + 6px + #{$offset});
      transform: translateX(-50%);
    } @elseif $direction == 'left' {
      right: calc(100% + 6px + #{$offset});
      top: 50%;
      transform: translateY(-50%);
    } @else if $direction == 'right' {
      left: calc(100% + 6px + #{$offset});
      top: 50%;
      transform: translateY(-50%);
    }
  }

  // Bubble triangle
  &:before {
    content: '';

    // Vertical direction settings
    @if $direction == 'bottom' or $direction == 'top' {
      left: 0;
      width: 100%;
      height: calc(6px + #{$offset});
      background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 6'%3E%3Cpolygon points='0,6 5,0 10,6' fill='#{$background}'/%3E%3C/svg%3E") 50% 100% / 10px 6px no-repeat;

    // Horizontal direction settings
    } @else if $direction == 'left' or $direction == 'right' {
      top: 0;
      width: calc(6px + #{$offset});
      height: 100%;
      background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 10'%3E%3Cpolygon points='0,0 6,5 0,10' fill='#{$background}'/%3E%3C/svg%3E") 0 50% / 6px 10px no-repeat;
    }

    // Bottom direction settings
    @if $direction == 'bottom' {
      top: 100%;

    // Top direction settings
    } @else if $direction == 'top' {
      bottom: 100%;
      transform: rotate(180deg);

    // Left direction settings
    } @else if $direction == 'left' {
      right: 100%;

    // Right direction settings
    } @else if $direction == 'right' {
      left: 100%;
      transform: rotate(180deg);
    }
  }
}

article > p:first-of-type > [data-tooltip] {
  @include tooltip;
}

.tooltip-left {
  @include tooltip(left, 3px);
}

.tooltip-right {
  @include tooltip(right, 3px);
}

.tooltip-top {
  @include tooltip(top);
}

.tooltip-bottom {
  @include tooltip;
}

.tooltip-offset {
  @include tooltip($offset: 10px);
}

.tooltip-width {
  @include tooltip($width: 220px);
}

// [data-tooltip] {
//   @include tooltip($width: 216px);
// }